buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'cz.habarta.typescript-generator:typescript-generator-gradle-plugin:3.0.1157'
  }
}

plugins {
  id 'org.springframework.boot' version '3.0.0'
  id 'io.spring.dependency-management' version '1.1.0'
  id 'java'
  // Spotless for the code style
  id "com.diffplug.spotless" version "6.12.0"
}

apply plugin: 'cz.habarta.typescript-generator'

group = 'com.odde'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 17
targetCompatibility = 17

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.flywaydb:flyway-mysql:9.10.0'
  compileOnly	 'org.flywaydb:flyway-core:9.10.0'
  implementation 'org.springframework.session:spring-session-core'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
  compileOnly	 'org.projectlombok:lombok'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  runtimeOnly	 'mysql:mysql-connector-java'
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation  'org.springframework.boot:spring-boot-starter-test'
  runtimeOnly    'org.springframework.boot:spring-boot-properties-migrator'
}

test {
  useJUnitPlatform()
  testLogging {
    exceptionFormat = 'full'
  }
}

tasks.register("testDBMigrate") {
  group = "application"
  description = "Runs DB mirgration for test profile"
  doFirst {
    tasks.bootRun.configure {
      systemProperty("spring.profiles.active", "test")
      systemProperty("odd-e.doughnut.task", "testDBMigrate")
    }
  }
  finalizedBy("bootRun")
}

tasks.register("bootRunE2E") {
  group = "application"
  description = "Runs Doughnut SpringBoot application in e2e profile"
  doFirst {
    tasks.bootRun.configure {
      systemProperty("spring.profiles.active", "e2e")
    }
  }
  finalizedBy("bootRun")
}

spotless {
  java {
    importOrder() // standard import order
    removeUnusedImports()
    googleJavaFormat()
    targetExclude("build/**")
  }
}

tasks.register("lint") {
  dependsOn spotlessCheck
}

generateTypeScript {
  noFileComment = true
  jsonLibrary = 'jackson2'
  classPatterns = [
    'com.odde.doughnut.entities.json.*',
  ]
  optionalAnnotations = ['org.springframework.lang.Nullable']
  customTypeMappings = [
    'java.sql.Timestamp:string'
  ]
  outputFile = '../frontend/src/@types/generated/rest.d.ts'
  outputKind = 'global'
  namespace = 'Generated';
}
